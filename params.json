{"name":"Automatr","tagline":"A web application automation testing framework using data file for driving test scripts","body":"# Automatr #\r\n\r\nAn automation framework for performing automation testing of Web Applications using Selenium.\r\n\r\n__Version__ : 0.0.10\r\n\r\n## How to Use ##\r\n### Direct execution ###\r\n1. Create a test script data file\r\n    * Create data file that hosts configuration, execution list and test cases.\r\n    * Refer wiki on how to create test case file, which has the required format for execution.\r\n2. Launch a selenium grid server with browser instances\r\n    * Refer Examples - Grid_Script for launching selenium grid with Firefox and Chrome instances.\r\n3. Execute the JAR file\r\n    * Provide data file path as the first argument\r\n4. Verify the test execution report generated by the framework\r\n    * Result report is generated in reports folder\r\n\r\n### Build and Run ###\r\n1. Download Source zip or git clone the repository\r\n2. Import into your JAVA work-space\r\n3. Configure the build path to include dependencies\r\n    * [JExcelAPI](http://jexcelapi.sourceforge.net/)\r\n    * [Selenium Server Standalone v2.42.2](http://selenium-release.storage.googleapis.com/2.42/selenium-server-standalone-2.42.2.jar)\r\n    * __(Optional)__ [Chrome Driver](http://chromedriver.storage.googleapis.com/index.html?path=2.10/)\r\n4. Configure the run configuration to pass in data file path as argument\r\n5. Create a test script data file\r\n    * Create data file that hosts configuration, execution list and test cases.\r\n    * Refer wiki on how to create test case file, which has the required format for execution.\r\n6. Launch a selenium grid server with browser instances\r\n    * Refer Examples - Grid_Script for launching selenium grid with Firefox and Chrome instances.\r\n7. Run the Main class using the configuration defined in step 4\r\n8. Verify the test execution report generated by the framework\r\n    * Result report is generated in reports folder\r\n\r\n***\r\n\r\n## Framework Capabilities ##\r\n* **Element Location:**\r\n    1. `Name`\r\n    2. `TagName`\r\n    3. `CSS`\r\n    4. `XPATH`\r\n    5. `ID`\r\n    6. `LinkText`\r\n    7. `PartialLinkText`\r\n* **Available Actions:**\r\n\t1. **General Functions:**\r\n\t\t* `Wait` - Waits for user defined seconds\r\n\t\t* `Javascript` - Executes a JS statement\r\n\t\t* `Run` - Runs another test case as boxed within an execution\r\n\t\t* `SwitchTo` - Switches to another window\r\n\t\t* `SwitchToParent` - Jumps back to parent window\r\n\t\t* `Evaluate` - Evaluates a mathematical expression (Uses Browsers JS Runtime) and returns the value\r\n\t\r\n\t2. **Web Element Functions:**\r\n\t\t* `Input` - Send string value to a web element\r\n\t\t* `Click` - Click on a web element\r\n\t\t* `Right Click` - Right-Click on a web element\r\n\t\t* `Clear` - Clear a web element\r\n\t\t* `Send` - Send special key combinations like Ctrl+C, Enter, etc.\r\n\t\t* `Hover` - Hover over a web element\r\n\t\t* `Drag And Drop` - Drag and drop a web element to another web element\r\n\t\t* `Count` - Count the number of web elements\r\n\t\t* `isDisplayed` | `isPresent` - Verify if a web element is displayed\r\n\t\t* `isEmpty` - Verify if a web element is empty\r\n\t\t* `isNotDisplayed` | `isNotPresent` - Verify if a web element is not displayed\r\n\t\t* Check-Box Specific Functions\r\n\t\t\t* `isChecked` - Verify if the check box is checked\r\n\t\t\t* `isNotChecked` - Verify if the check box is not checked\r\n\t\t* Select-Box Specific Functions\r\n\t\t\t* `SelectByText` - Select option by text\r\n\t\t\t* `SelectByValue` - Select option by value \r\n\t\t\t* `SelectByIndex` - Select option by index\r\n\t\t* `GetAttribute` - Get the specified attribute of a web element\r\n\t\t\r\n\t3. **Run-Time Utility Functions**\r\n\t\t* `Save` - Save Text or Value attribute of an element to run-time variable\r\n\t\t* `Match` - Match the Text or Value of an element to stored run-time variable\r\n\t\t* `Equal` - To check equality of 2 variables\r\n\t\t* `NotEqual` - To check inequality of 2 variables\r\n\t\t* `Print` - Prints out text, value or string to console\r\n\t\r\n\t4. **Assertion Functions**\r\n\t\t* `Assert` [Default] - Default assert without any parameters will assert `Text` of an element\r\n\t\t* `Assert` [URL Over-ride] - URL Over-ride will assert the URL of the page\r\n\t\t* `Assert` [Misc Param Over-ride] - Over-ridden assert will assert the `Parameter` value of an element\r\n\r\n\t5. **Driver Functions**\r\n\t\t* `Close` - Closes the current window\r\n\t\t* `Quit` - Quits the browser instance\r\n\t\t* `Open` - Open a new browser instance\r\n\t\t* `Open/Get` - Open a new browser instance and get the URL\r\n\t\t* `Get` - Get a URL\r\n\t\t* `AcceptAlert` - Accept an alert box\r\n\r\n***\r\n## Internal Working ##\r\n* Reader package reads the data file and extracts the test execution configuration, test execution management and test cases.\r\n* Executor package executes the scripts and provides interim results\r\n* Reported package prints the results in user readable format (HTML document)\r\n\r\n## Dependencies ##\r\n* jxl.jar - Reading and writing Excel files\r\n* selenium-server-standalone - v2.42.2\r\n\r\n***\r\n\r\n## Road Map ##\r\n* Adding advanced selenium functions - In-Progress\r\n* Better Errors\r\n* Email configuration for report delivery\r\n* ~~Basic selenium functions~~\r\n* ~~Reporting~~\r\n* ~~Using results from execution module in reporting module~~\r\n* ~~Take screenshot in case of step failure~~\r\n* ~~Adding assertion checks~~\r\n* ~~Allow providing data file path from command line / run config~~\r\n* ~~Better Reports~~\r\n* ~~Error focus in screenshot~~\r\n\r\n***\r\n\r\n## Change Log ##\r\n* __14/07/2014__ : \r\n\t* [New Feature] : Evaluate functionality\r\n\t* [New Feature] : Print functionality\r\n\t* [New Feature] : Window handling\r\n\t* [Enhancement] : Attribute assertions\r\n\t* [Enhancement] : Code refactored\r\n\t* [Bug Fix] : Catch error of empty execution and report hashes\r\n\t* [Bug Fix] : Catch error of AJAX listener for sites not using jQuery for XHR\r\n* __27/06/2014__ : Refactored selenium file code, added 'Equal','isChecked','isNotChecked', fixed javascript action\r\n* __25/06/2014__ : Added select box option saving, assert can also use run-time variable data, bug fix in run-time lookup\r\n* __18/06/2014__ : Error handling for missing parameter, option to skip a test step\r\n* __13/06/2014__ : Added selenium functions for Select box, reworked error filename, reword error message in html report, added functionality to run command to allow step removal from front & back\r\n* __12/06/2014__ : Added total test cases description while reading, fixed multiple module detail tab report bug, sorting test cases in report, fixed click - Scroll into view only if element out of viewport\r\n* __11/06/2014__ : Refactored code, added Save/Match functionality, added error focus on web element, uses Selenium-2.42.2\r\n* __10/06/2014__ : The result report now organize the test cases in accordians with status as the header color, reworked URL assert\r\n* __06/06/2014__ : Created JAR executable, added Selenium Grid by default, AJAX listeners, command line argument for Data file\r\n* __04/06/2014__ : Added more selenium funtions, restructured error handler for Action - Assert\r\n* __02/06/2014__ : Restructured executor to remove if/elsifs and use switch for action types. \r\n* __Undocumented__ : Reworked Reading and Executing for allowing user to reuse existing test case within another test case.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}